name: Pytest Flask App
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  CI:
  #Se elige un RUNNER "especie de contenedor"
    runs-on:  ubuntu-latest
    env:
      KEY: '${{ secrets.KEY }}'
      ATLAS: '${{ secrets.ATLAS }}'
    steps:
    #Descargamos una copia del repositorio en el runner con el checkout
      - uses:  actions/checkout@v3

    #Instalamos Python, a la verión 3.8
      - name:  Instalando Python 3.8
        uses:  actions/setup-python@v4.3.1
        with:
          python-verion: 3.8

    #Con está acción guardamos en caché las dependencias descargadas para mejorar la velociadad de ejecución del RUNNER
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    #Instalamos dependencias (al tener el actions/cache@v3 no se instalan)
      - name:  Instalando dependencias
        run:  |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
          export KEY='${{ vars.KEY }}'
          export ATLAS='${{ vars.ATLAS }}'

    #Lanzamos el comando Pytest
      - name: Test with pytest
        run:  |
          pytest
